{% extends 'base.html.twig' %}

{% block title %}Hello TestController!{% endblock %}

{% block body %}
<div class="w-full h-full p-16">
    <div class="flex flex-col justify-center items-center">
        <form
            x-data="useForm" x-on:submit.prevent="post"
        >
            <div class="space-y-12">
                <h2 class="text-base font-semibold leading-7 text-gray-900">Chain Explorer Light</h2>
                <div class="mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
                    <div class="col-span-full">
                        <label for="asset" class="block text-sm font-medium leading-6 text-gray-900">Asset</label>
                        <div class="mt-2">
                            <select
                                id="asset"
                                name="asset"
                                class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600"
                            >
                                <option selected value="btc">BTC</option>
                                <option value="eth">ETH</option>
                            </select>
                        </div>
                    </div>

                    <div class="col-span-full">
                        <label for="address" class="block text-sm font-medium leading-6 text-gray-900">Address</label>
                        <div class="mt-2">
                            <input
                                id="address"
                                name="address"
                                type="address"
                                autocomplete="address"
                                class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                            />
                        </div>
                    </div>

                    <div class="sm:col-span-3">
                        <label for="timeframe-from" class="block text-sm font-medium leading-6 text-gray-900">Timeframe from</label>
                        <div class="mt-2">
                            <input
                                type="datetime-local"
                                name="timeframe-from"
                                id="timeframe-from"
                                autocomplete="given-name"
                                class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                            />
                        </div>
                    </div>

                    <div class="sm:col-span-3">
                        <label for="timeframe-to" class="block text-sm font-medium leading-6 text-gray-900">Timeframe to</label>
                        <div class="mt-2">
                            <input
                                type="datetime-local"
                                name="timeframe-to"
                                id="timeframe-to"
                                autocomplete="family-name"
                                class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                            />
                        </div>
                    </div>

                    <div class="col-span-full">
                        <label for="threshold" class="block text-sm font-medium leading-6 text-gray-900">Threshold</label>
                        <div class="mt-2">
                            <input
                                type="number"
                                name="threshold"
                                id="threshold"
                                class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                            />
                        </div>
                    </div>
                </div>
            </div>
            <div class="mt-6 flex items-center justify-end gap-x-6">
                <button
                    type="submit"
                    class="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                >
                    Search
                </button>
            </div>
            <div x-show="response" x-transition class="flex flex-col gap-2">
                <div class="flex justify-start gap-2"><p class="font-bold">Count Tx:</p><p x-text="response.count"></p></div>
                <div class="flex justify-start gap-2"><p class="font-bold">Avg Tx Quantity:</p><p  x-text="response.averageQuantity"></p></div>
            </div>
        </form>
    </div>
</div>
{% endblock %}

{% block javascripts %}
<script>
    document.addEventListener("alpine:init", () => {
        Alpine.data("useForm", () => ({
            response: false,

            data() {
                const inputs = Array.from(this.$el.querySelectorAll("input, select"));
                const data = inputs.reduce(
                    (object, key) => ({
                        ...object,
                        [key.name]: key.value !== "" ? key.value : null
                    }), {}
                );
                return data;
            },

            async post() {
                this.response = await (
                    await fetch("/post", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify(this.data()),
                    })
                ).json();
            },
        }));
    });
</script>
{% endblock %}